############################
#Accomplishes the following build tasks
#
#1) Runs the cloudformation template to create the necessary resources
#2) Runs python coverage function to generate Auto HTML documentation
##) Runs unit tests of lambda functions, checks aws resources created
#
#
############################
version: 0.2

env:
  secrets-manager:
    REDDIT_API_KEY: /prod/reddit_api_key:secret_key

phases:
  ###########################################
  #Uses a python runtime
  #Note that you do not need the \ to escape
  #aws cli commands
  ###########################################
  install:
    runtime-versions:
       python: 3.7
    commands:
      - echo Entered the install phase...

      - BUILD_ENVIRONMENT=dev
      - DESTINATION_BUCKET=dev-static-site-homepage
      - RATINGS_UPDATE_STACK=dev-homepage-backend-logic
      - STATIC_WEBPAGE_STACK=dev-homepage-webpage
      - pip install -r tests/requirements.txt
      - ls -l
  build:
    commands:
      - echo Defined build variables
      - echo $BUILD_ENVIRONMENT
      - echo $DESTINATION_BUCKET
      - echo $RATINGS_UPDATE_STACK
      - echo $STATIC_WEBPAGE_STACK


      - echo "Creating $RATINGS_UPDATE_STACK"
      - aws cloudformation create-stack --stack-name $RATINGS_UPDATE_STACK
          --template-body file://templates/ratings_update_lambda.yml
          --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM

      #Running reddit rating tests
      - python -m unittest tests/test_reddit_ratings.py

      #static s3 bucket for testing upload code
      - aws cloudformation create-stack --stack-name $STATIC_WEBPAGE_STACK
       --template-body file://templates/static_webpage.yml
       --capabilities CAPABILITY_NAMED_IAM

      #Waits until the stack has been successfully created
      - aws cloudformation wait stack-create-complete
        --stack-name $STATIC_WEBPAGE_STACK

      ###########################################
      #Making sure the dev bucket replicates prod
      #Will copy over the latest version
      ############################################
      - aws s3 sync s3://ryanrigato.com s3://$DESTINATION_BUCKET

      ###########################################
      #Copying default root object for webpage from repo to s3 bucket
      ############################################
      - aws s3 cp ./web/index.html s3://$DESTINATION_BUCKET/index.html

      ###########################################
      #Exclude and include parameters for sync are
      #evaluated against the source directory
      #The last filter applied takes precedence
      #--delete option deletes any files in the destination
      #that are not in the source
      ##########################################
      - aws s3 sync ./web s3://$DESTINATION_BUCKET
        --exclude "*" --include "include/*" --delete

      - python -m unittest tests/test_dev_aws_resources.py



  post_build:
    commands:
      - echo cleaning up resources if build was successful

      #deleting bucket and stack after testing
      - aws s3 rm s3://$DESTINATION_BUCKET --recursive

      - aws cloudformation delete-stack --stack-name $STATIC_WEBPAGE_STACK

      - aws cloudformation delete-stack --stack-name $RATINGS_UPDATE_STACK

artifacts:
  files:
    - ./logs/*
