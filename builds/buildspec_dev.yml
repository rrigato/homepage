############################
#Accomplishes the following build tasks
#
#1) Runs the cloudformation template to create the necessary resources
#2) Runs python coverage function to generate Auto HTML documentation
##) Runs unit tests of lambda functions, checks aws resources created
#
#
############################
version: 0.2

# env:
  # variables:
  #   JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  # parameter-store:
  #   LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword

phases:
  ###########################################
  #Uses a python runtime
  #Note that you do not need the \ to escape
  #aws cli commands
  ###########################################
  install:
    runtime-versions:
       python: 3.7
    commands:
      - echo Entered the install phase...

      - BUILD_ENVIRONMENT=dev
      - DESTINATION_BUCKET=dev-static-site-homepage
      - pip install -r tests/requirements.txt
      - ls -l
    finally:
      - echo This always runs even if the update or install command fails

  build:
    commands:
      - echo $BUILD_ENVIRONMENT
      - echo $DESTINATION_BUCKET
      - echo Entered the build phase...
      - echo Build started on `date`

      #static s3 bucket for testing upload code
      - aws cloudformation create-stack --stack-name dev-homepage-webpage
       --template-body file://templates/static_webpage.yml
       --capabilities CAPABILITY_NAMED_IAM

      #Waits until the stack has been successfully created
      - aws cloudformation wait stack-create-complete
        --stack-name dev-homepage-webpage

      ###########################################
      #Making sure the dev bucket replicates prod
      #Will copy over the latest version
      ############################################
      - aws s3 sync s3://ryanrigato.com s3://$DESTINATION_BUCKET

      ###########################################
      #Copying web files from repo to s3 bucket
      ############################################
      - aws s3 cp ./web/home.html s3://$DESTINATION_BUCKET/home.html

      ###########################################
      #Exclude and include parameters for sync are
      #evaluated against the source directory
      #The last filter applied takes precedence
      #--delete option deletes any files in the destination
      #that are not in the source
      ##########################################
      - aws s3 sync ./web s3://$DESTINATION_BUCKET
        --exclude "*" --include "include/*" --delete

      - python tests/test_dev_aws_resources.py

  post_build:
    commands:
      - echo cleaning up resources if build was successful

      #deleting bucket and stack after testing
      - aws s3 rm s3://$DESTINATION_BUCKET --recursive

      - aws cloudformation delete-stack --stack-name dev-homepage-webpage



artifacts:
  files:
    - ./logs/*
