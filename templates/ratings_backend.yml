---
AWSTemplateFormatVersion: "2010-09-09"

#Transforms any serverless code to cloudformation
Transform: AWS::Serverless-2016-10-31

Description: |
  Creates the backend storage and compute necessary for
  updating ratings

Parameters:
  ProjectName:
    Type: String
    Default: RatingsBackend

  RedditApiKey:
    Type: String
    Default: demokey

  RedditApiSecret:
    Type: String
    Default: demosecret

Resources:
######################
#VPC for  lambda function,
#and dynamodb table
######################
  RatingsVpc:
    Type: AWS::EC2::VPC
    Properties:
        CidrBlock: 192.168.0.0/20
        Tags:
          -
            Key: keep
            Value: "yes"
          -
            Key: reason
            Value: dynamo-private-vpc
          -
            Key: region
            Value: us-east-1
        #will show up as the name value in the vpc console
          -
            Key: Name
            Value: !Join ['', [!Ref ProjectName, '-vpc']]

######################
#Private subnet which will include lambda
#function
######################
  PrivateLambdaSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RatingsVpc
      CidrBlock: 192.168.0.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs 'us-east-1'
      Tags:
        -
          Key: keep
          Value: "yes"
        -
          Key: reason
          Value: lambda-private-subnet
        #will show up as the name value in the vpc console
        -
          Key: Name
          Value: !Join ['', ['private-subnet-', !Ref ProjectName]]

  BackendRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RatingsVpc
      Tags:
        -
          Key: keep
          Value: "yes"
        -
          Key: Name
          Value: !Join ['', ['vpc-route-table', !Ref ProjectName]]

######################
#VPC for running lambda functions
#
######################
  PrivateSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateLambdaSubnet1
      RouteTableId: !Ref BackendRouteTable

######################
#Reddit API key storage
#
######################
  RedditApiSecretsKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secrets string for reddit api key
      Name: /prod/reddit_api_key
      SecretString: !Ref RedditApiKey
      Tags:
        -
          Key: keep
          Value: "yes"
        -
          Key: reason
          Value: reddit-api-key
